# ==========================================
# AQUAFOREST RAG SYSTEM - ENVIRONMENT VARIABLES
# ==========================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env file to git - it contains sensitive API keys

# ==========================================
# üîß DEVELOPMENT CONFIGURATION
# ==========================================
TEST_ENV=true
DISABLE_BUSINESS_MAPPINGS=false
ENABLE_COMPETITORS_ONLY=false

# ==========================================
# üóÑÔ∏è PINECONE VECTOR DATABASE
# ==========================================
PINECONE_API_KEY=your_pinecone_api_key_here
PINECONE_INDEX_NAME=aquaforest
PINECONE_ENVIRONMENT=us-east-1

# ==========================================
# ü§ñ OPENROUTER API CONFIGURATION (Per-Node)
# ==========================================
# Each workflow component uses its own API key for load balancing

# API Keys (get from https://openrouter.ai/keys)
INTENT_DETECTOR_API=sk-or-v1-your_key_here
BUSINESS_REASONER_API=sk-or-v1-your_key_here
QUERY_OPTIMIZER_API=sk-or-v1-your_key_here
RESPONSE_FORMATTER_API=sk-or-v1-your_key_here
FOLLOW_UP_API=sk-or-v1-your_key_here

# Model Selection per Component
INTENT_DETECTOR_MODEL=google/gemini-2.5-flash-preview-05-20
BUSINESS_REASONER_MODEL=google/gemini-2.5-flash-preview-05-20
QUERY_OPTIMIZER_MODEL=google/gemini-2.5-flash-preview-05-20
RESPONSE_FORMATTER_MODEL=google/gemini-2.5-flash-preview-05-20
FOLLOW_UP_MODEL=google/gemini-2.0-flash-001

# ==========================================
# üîë OPENAI CONFIGURATION
# ==========================================
# Used for embeddings and fallback
OPENAI_API_KEY=sk-proj-your_openai_key_here
OPENAI_EMBEDDING_MODEL=text-embedding-3-small
OPENAI_TEMPERATURE=0.3
OPENAI_MAX_TOKENS=16384

# ==========================================
# ‚öôÔ∏è APPLICATION SETTINGS
# ==========================================
DEFAULT_K_VALUE=12
ENHANCED_K_VALUE=12
SUPPORTED_LANGUAGES=pl,en,de,fr,es,it,others
PRODUCTS_FILE_PATH=data/products.json

# ==========================================
# üåê CORS & SERVER CONFIGURATION
# ==========================================
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:8080,http://127.0.0.1:3000

# ==========================================
# üîí RATE LIMITING & SECURITY
# ==========================================
ENABLE_RATE_LIMITING=true
RATE_LIMIT_STORAGE=memory://

# Rate Limits per Tier
TIER1_RATE_LIMIT=20/minute     # Chat endpoints (/chat, /chat/stream)
TIER2_RATE_LIMIT=60/minute     # Analytics & session endpoints
TIER3_RATE_LIMIT=200/minute    # Basic endpoints (/health, /feedback)
VISION_RATE_LIMIT=10/minute    # Vision API endpoint
CSV_EXPORT_LIMIT=10/hour       # CSV export endpoints
GLOBAL_RATE_LIMIT=100/minute   # Fallback for unspecified endpoints

# IP Filtering (optional - leave empty to disable)
IP_WHITELIST=
IP_BLACKLIST=

# Auto-blacklisting Configuration
AUTO_BLACKLIST_ENABLED=true      # Enable automatic IP blacklisting
VIOLATION_THRESHOLD=2            # Number of rate limit violations before blacklist
BLACKLIST_DURATION_HOURS=24      # Hours to keep IP blacklisted
VIOLATION_WINDOW_HOURS=24        # Time window to count violations

# ==========================================
# üí¨ FACEBOOK MESSENGER INTEGRATION
# ==========================================
MESSENGER_ON=true
MESSENGER_TOKEN=your_facebook_page_access_token_here
MESSENGER_VERIFY_TOKEN=aquaforest_webhook_2025
FACEBOOK_API_VERSION=v22.0

# ==========================================
# üìä ANALYTICS & MONITORING
# ==========================================
# Analytics are automatically enabled with SQLite database
# Database file: aquaforest_analytics.db (created automatically)

# ==========================================
# üöÄ PRODUCTION NOTES
# ==========================================
# 1. Set TEST_ENV=false in production
# 2. Use Redis for RATE_LIMIT_STORAGE in production: redis://localhost:6379
# 3. Configure proper CORS_ORIGINS for your domain
# 4. Set up monitoring for rate limit violations
# 5. Regularly backup aquaforest_analytics.db