#!/usr/bin/env python3
"""Test ICP recommendations extraction with element separators"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.icp_scraper import ICPScraper

def test_icp_element_separators():
    """Test if recommendations are correctly extracted for individual elements"""
    
    scraper = ICPScraper()
    
    # Test with real-like ICP data with multiple elements having Zalecenia
    mock_raw_data = """
    PO4 Fosforany | 0 - 0.0300mg/l | 0.0331 mg/l | + 0.0331 mg/l | ‚¨ÜÔ∏è HIGH
    Zalecenia Uwaga! Poziom PO4 za wysoki, w celu obni≈ºenia podmie≈Ñ wodƒô i u≈ºyj Phosphate Minus oraz NitraPhos Minus.
    Al Glin 0 - 0.0100 mg/l 0.0021 mg/l + 0.0021 mg/l
    Co Kobalt | 0.0001 - 0.0006mg/l | 0 mg/l | - 0.00035 mg/l | ‚¨áÔ∏è LOW
    Zalecenia Uwaga! Poziom kobaltu za niski. Pamiƒôtaj, ≈ºe maksymalna bezpieczna dawka dzienna wynosi 1 ml na 100 litr√≥w wody. Popraw wynik stosujƒÖc: Cobaltum Sugerowana dawka dla Twojego akwarium 8.05 ml
    Cr Chrom 0.0001 - 0.0004 mg/l 0 mg/l - 0.00025 mg/l
    Zalecenia Uwaga! Poziom chromu za niski. Pamiƒôtaj, ≈ºe maksymalna bezpieczna dawka dzienna wynosi 1 ml na 100 litr√≥w wody. Popraw wynik stosujƒÖc: Chromium Sugerowana dawka dla Twojego akwarium 5.75 ml
    Fe ≈ªelazo 0.0020 - 0.0060 mg/l 0.0012 mg/l - 0.0028 mg/l
    Zalecenia Uwaga! Poziom ≈ºelaza za niski. Popraw wynik stosujƒÖc: Ferrum Sugerowana dawka dla Twojego akwarium 32.2 ml
    Ca Wap≈Ñ 380 - 460 mg/l 455 mg/l + 35 mg/l
    """
    
    print("üß™ Testing ICP recommendations extraction with element separators...")
    print(f"üìã Test data length: {len(mock_raw_data)} characters")
    
    recommendations = scraper.extract_icp_recommendations_text(mock_raw_data)
    
    print(f"\n‚úÖ Found {len(recommendations)} individual recommendations:")
    for i, rec in enumerate(recommendations, 1):
        print(f"\n{i}. {rec}")
        print("   " + "="*80)
    
    # Expected: Should find 4 separate recommendations (PO4, Co, Cr, Fe)
    print(f"\nüéØ Expected 4 recommendations, got {len(recommendations)}")
    
    if len(recommendations) >= 3:
        print("‚úÖ SUCCESS: Found multiple individual recommendations!")
        
        # Check if they're properly separated
        has_po4 = any("PO4" in rec or "fosfor" in rec.lower() for rec in recommendations)
        has_cobalt = any("kobalt" in rec.lower() for rec in recommendations)
        has_chrome = any("chrom" in rec.lower() for rec in recommendations)
        has_iron = any("≈ºelaz" in rec.lower() for rec in recommendations)
        
        print(f"   - PO4 recommendation: {'‚úÖ' if has_po4 else '‚ùå'}")
        print(f"   - Cobalt recommendation: {'‚úÖ' if has_cobalt else '‚ùå'}")
        print(f"   - Chrome recommendation: {'‚úÖ' if has_chrome else '‚ùå'}")
        print(f"   - Iron recommendation: {'‚úÖ' if has_iron else '‚ùå'}")
        
    else:
        print("‚ùå FAILED: Should have found at least 3 individual recommendations")

if __name__ == "__main__":
    test_icp_element_separators() 